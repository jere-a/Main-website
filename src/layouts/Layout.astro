---
import { getLangFromUrl } from '@/i18n/utils';
import Head from '@/components/Header.astro';
import NavMenu from '@/components/react/nav-menu';
import Footer from '@/components/Footer.astro';
import LanguagePicker from '@/components/LanguagePicker.astro';

// Global CSS
import '../global.css';

import { ModeToggle } from '@/components/react/ModeToggle';

// configs
import { isOnline } from '../const';
import { siteConfig } from '../config';

interface Props {
	title: string | undefined;
}

const { title } = Astro.props;
const combtitle = siteConfig.title + ' | ' + title;

const isProd = import.meta.env.PROD;
const isDev = import.meta.env.DEV;

const lang = getLangFromUrl(Astro.url);

const q = Astro.url.searchParams.get('q') ?? undefined;
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ['class'],
		});
	}
</script>

<html class="dark" lang={lang}>
	<Head title={combtitle} />
	<body>
		<div class="NavMenu">
			<header>
				<NavMenu><ModeToggle /></NavMenu>
			</header>
		</div>
		<slot />
		{
			isOnline && (
				<>
					<div
						class="cf-turnstile"
						data-sitekey="0x4AAAAAAAbhEsfftzTNsmMO"
						data-theme="dark"
					/>
					<noscript>
						<iframe
							src="https://www.googletagmanager.com/ns.html?id=GTM-P6SH88WW"
							height="0"
							width="0"
							style="display:none;visibility:hidden"
						/>
					</noscript>
				</>
			)
		}
		<!-- End Google Tag Manager (noscript) -->

		{
			isOnline && (
				<script
					is:inline
					src="https://challenges.cloudflare.com/turnstile/v0/api.js"
					defer
				/>
			)
		}

		<Footer />
	</body>
</html>
