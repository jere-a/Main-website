---
import { Image, Picture } from 'astro:assets';
import '@/global.css';

interface Props {
	title: string;
	body?: string;
	src: ImageMetadata;
	alt?: string;
	class?: any;
}

const { class: className, src, title, body, alt } = Astro.props;

const altfunc = (): string => {
	if (alt !== undefined) return alt;
	else if (alt == undefined) return title;
	else return "";
};
---

<li class="image-card animate__animated animate__bounceIn">
	<div>
		<Picture
			src={src}
			alt={altfunc()}
			widths={[240, 720, 2500]}
			sizes={`(max-width: 360px) 240px, (max-width: 1080px) 720px, 2500px`}
			class={`image skeleton ${className}`}
			formats={['avif', 'webp']}
			quality={'high'}
		/>
		<br />
		<h2 class="title">
			{title}
		</h2>
		{body !== undefined && <p class="body">{body}</p>}
	</div>
</li>

<script>
  import { mainAllComponents } from "@/ts/components";
  mainAllComponents('imghold');
</script>

<style>
	:root {
		--padimg: calc(0.8rem - 1px);
	}
	.image-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.image-card > div {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: var(--padimg);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	.image-card > div > picture > img,
	.image-card > div > picture > source {
		width: 100%;
		height: auto;
		margin: auto;
		justify-content: center;
		border-radius: 18px;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}

	/* 	.image-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.image-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	} */
</style>
