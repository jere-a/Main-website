---
import { Image, Picture } from 'astro:assets';
import '@/global.css';

interface Props {
	title: string;
	body?: string;
	src: ImageMetadata;
	alt?: string;
	class?: any;
}

const { class: className, src, title, body, alt } = Astro.props;

const altfunc = (): string => {
	if (alt !== undefined) return alt;
	else if (alt == undefined) return title;
	else return "";
};
---

<li class="image-card animate__animated animate__bounceIn">
	<div>
        <div class="lazy-image">
      		<Picture
      			src={src}
      			alt={altfunc()}
      			width={20}
      			class={`image skeleton placeholder ${className}`}
      			formats={['avif', 'webp']}
      			quality={'low'}
      		/>
            <Picture
    			src={src}
    			alt={altfunc()}
    			widths={[240, 720, 2500]}
    			sizes={`(max-width: 360px) 240px, (max-width: 1080px) 720px, 2500px`}
    			class={`image full-image ${className}`}
    			formats={['avif', 'webp']}
    			quality={'high'}
    		/>
        </div>
		<br />
		<h2 class="title">
			{title}
		</h2>
		{body !== undefined && <p class="body">{body}</p>}
	</div>
</li>

<script>
  import { queryAll } from '@/ts/global';
  import { mainAllComponents } from '@/ts/components';
  
  const images = queryAll(".lazy-image");
  
  images.forEach((imageContainer: any) => {
    function loaded() {
      imageContainer.classList.add("loaded");
    }
    const img = imageContainer.querySelector("img.full-image") as HTMLImageElement;
    
    if (img.complete) {
      loaded();
    } else {
      img.addEventListener("load", loaded);
    }
  });

  mainAllComponents('imghold');
</script>

<style>
	:root {
		--padimg: calc(0.8rem - 1px);
	}
	.image-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.image-card > div {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: var(--padimg);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	.image-card > div > picture > img,
	.image-card > div > picture > source {
		width: 100%;
		height: auto;
		margin: auto;
		justify-content: center;
		border-radius: 18px;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
    
	.lazy-image {
        position: relative;
        overflow: hidden;
    }
    
    .lazy-image img.placeholder {
        position: absolute;
        inset: 0;
        z-index: 1;
        width: 100%;
        height: 100%;
        object-fit: cover;
        filter: blur(10px);
        transition: opacity 250ms ease-in-out;
    }
    
    .lazy-image img.full-image {
        object-fit: cover;
        opacity: 0;
        transition: opacity 250ms ease-in-out;
    }
    
    .lazy-image.loaded img.placeholder {
        opacity: 0;
    }
    
    .lazy-image.loaded img.full-image {
        opacity: 1;
    }

    .lazy-image img.placeholder::before {
      content: "";
      position: absolute;
      inset: 0;
      opacity: 0;
      animation: pulse 2.5s infinite;
      background-color: white;
    }
    
    @keyframes pulse {
      0% {
        opacity: 0;
      }
      50% {
        opacity: 0.1;
      }
      100% {
        opacity: 0;
      }
    }
    
	/* 	.image-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.image-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	} */
</style>
