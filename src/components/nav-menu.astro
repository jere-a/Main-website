---
import { cn } from '@/lib/utils';
import { getLocale } from "astro-i18n-aut";
import { useTranslations } from '@/i18n/utils';

// css
import '@/global.css';
import '@/styles/holidays/index.css';

interface Props {
	active: string | undefined;
}
const { active } = Astro.props;
const lang = getLocale(Astro.url);
const t = useTranslations(lang);

const pageLang = (lang: string): string => {
    if (lang.startsWith(`/${lang}/`)) return `/${lang}`;
      else return '';
}

const navigationMenuTriggerStyle = cn(
	'group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50'
);
const activefunc = (active: string | undefined, activetab: string | undefined): string => {
		return active == activetab ? 'bg-blue-950' : '';
};

const links: { href: string, class?: string | null | undefined, active?: string, name?: string }[] = [
  {
    href: `${pageLang(lang)}/`,
    class: `${`${navigationMenuTriggerStyle} navItem animate__animated animate__bounceIn`}`,
    active: 'koti',
    name: t('nav.home')
  },
  {
    href: `${pageLang(lang)}/images/`,
    class: `${`${navigationMenuTriggerStyle} navItem animate__animated animate__bounceIn`}`,
    active: 'kuvat',
    name: t('nav.images')
  },
  {
    href: `${pageLang(lang)}/blog/`,
    class: `${`${navigationMenuTriggerStyle} navItem animate__animated animate__bounceIn`}`,
    active: 'blog',
    name: t('nav.blog')
  }
];
---

<div class={cn('relative z-10 flex max-w-max flex-1 items-center justify-center')}>
	<div class={cn('group flex flex-1 list-none items-center justify-center space-x-1')}>
	    <ul class={cn("justify-center items-center group flex flex-1 list-none space-x-1")} data-orientation="horizontal" dir="ltr">
			{links.map(item => (
			    <li>
			        <a href={item.href} class={cn(`${item.class} ${activefunc(active, item.active)}`)}> {item.name} </a>
				</li>
			))}
			<li>
			    <slot />
			</li>
		</ul>
	</div>
</div>
